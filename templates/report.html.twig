{% extends "base.html.twig" %}

{% block title %}Report{% endblock %}

{% block body %}
    <div class="nav sticky">
        <a class="nav-btn small-btn" href="#kmom01">Kmom01</a>
        <a class="nav-btn small-btn" href="#kmom02">Kmom02</a>
        <a class="nav-btn small-btn" href="#kmom03">Kmom03</a>
        <a class="nav-btn small-btn" href="#kmom04">Kmom04</a>
        <a class="nav-btn small-btn" href="#kmom05">Kmom05</a>
        <a class="nav-btn small-btn" href="#kmom06">Kmom06</a>
        <a class="nav-btn small-btn" href="#kmom07">Kmom07</a>
        <a class="nav-btn small-btn" href="#kmom10">Kmom10</a>
    </div>
    <div class="center">
        <h1>Report</h1><br>
        <article>
            <h2 id="kmom01">kmom01</h2>

            <div class="float-left">
                <ul>
                    <li>Berätta kort om dina förkunskaper och tidigare erfarenheter kring objektorientering.</li>
                    <p>
                        Mina förkunskaper och tidigare erfarenheter om objektorientering kommer från kursen oopython (DV1660), där jag lärde mig grunden till objektorienterad programmering, 
                        hur kodens struktur ändras och många nya begrepp och tankesätt kring hur man kodar med klasser och objekt.
                    </p>

                    <li>Berätta kort om PHPs modell för klasser och objekt. Vilka är de grunder man behöver veta/förstå för att kunna komma igång och skapa sina första klasser?</li>
                    <p>
                        En grundläggande uppfattning om hur klasser och objekt fungerar är ju rekommenderat, men utöver detta så är det mest strukturen som är annorlunda i PHP och Symfony 
                        ramverket som är annorlunda. Eftersom jag inte kodat klasser i PHP än, kan jag inte säga med 100% säkerhet, men angående min tidigare erfarenhet så kommer det nog hänga på att 
                        skapa klasser med konstruktor och metoder, och sedan objekt som är instanser av klassen.
                    </p>

                    <li>Reflektera kort över den kodbas, koden, strukturen som användes till uppgiften me/report, hur uppfattar du den?</li>
                    <p>
                        Den är sannerligen klurig, och jag behövde ofta söka upp fel jag fick i kursens discord kanal, eller i övrigt på webben, men jag känner att jag har börjar förstå det mer. 
                        Jag begriper hur routes fungerar, hur jag kan ge dem namn som jag senare kan använda i länkar, hur jag kopplar routes till twig filer, hur .htaccess filen skall fungera, etcetera. 
                        Det är en väldigt unik kodbas och struktur, och jag kan inte kommentera mycket på hur bra den är i jämförelse med annat ännu, eftersom jag bara börjat, och allt är lite klurigt när 
                        man aldrig provat det tidigare!
                    </p>

                    <li>Med tanke på artikeln “PHP The Right Way”, vilka delar in den finner du extra intressanta och värdefulla? Är det några särskilda områden som du känner att du vill veta mer om? Lyft fram några delar av artikeln som du känner mer värdefulla.</li>
                    <p>
                        Med tanke på att jag inte hunnit läsa hela artikeln ännu, kan jag inte lyfta upp delar från slutet, men från det jag jobbat igenom, tycker jag att det är intressant med jämförelserna de drar med 
                        andra programmeringsspråk. Jag har tidigare sett PHP som ett lite mindre avancerat språk än det faktiskt är, och att läsa om möjligheterna att använda mycket av vad jag använt 
                        mig av i oopython kursen, som till exempel rekursion, är väldigt intressant.
                    </p>

                    <li>Vilken är din TIL för detta kmom?</li>
                    <p>
                        Min TIL för detta kmom är hur jag kommer igång med att använda och jobba med Symfony, samt en introduktion till vad jag kan förvänta mig i senare kursmoment. Jag har lärt mig skapa en 
                        webbplats med denna kodbas, hur man skapar routes, kopplar dem till twig filer och så vidare. Jag har byggt en grundlig uppfattning till senare kursmoment, och hur jag skall tänka i framtiden.
                    </p>
                </ul>
            </div>

            <h2 id="kmom02">kmom02</h2>

            <div class="float-left">
                {# <ul>
                    <li>Förklara kort de objektorienterade konstruktionerna arv, komposition, interface och trait och hur de används i PHP.</li>
                    <p></p>

                    <li>Berätta om din implementation från uppgiften. Hur löste du uppgiften, är du nöjd/missnöjd, vilken förbättringspotential ser du i din koden och dina klasser?</li>
                    <p></p>

                    <li>Vilka är dina reflektioner så här långt med att jobb i Symfony med applikationskod enligt MVC?</li>
                    <p></p>

                    <li>Vilken är din TIL för detta kmom?</li>
                    <p></p>
                </ul> #}
            </div>

            <h2 id="kmom03">kmom03</h2>
            <div class="float-left">
                {# <ul>
                    <li></li>
                    <p></p>
                </ul> #}
            </div>


            <h2 id="kmom04">kmom04</h2>

            <div class="float-left">
                {# <ul>
                    <li></li>
                    <p></p>
                </ul> #}
            </div>


            <h2 id="kmom05">kmom05</h2>

            <div class="float-left">
                {# <ul>
                    <li></li>
                    <p></p>
                </ul> #}
            </div>


            <h2 id="kmom06">kmom06</h2>

            <div class="float-left">
                {# <ul>
                    <li></li>
                    <p></p>
                </ul> #}
            </div>


            <h2 id="kmom10">kmom10</h2>

            <div class="float-left">
                {# <ul>
                    <li></li>
                    <p></p>
                </ul> #}
            </div>
        </article>
    </div>
{% endblock %}
